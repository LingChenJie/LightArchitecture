plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}
//apply plugin: 'android-aspectjx' 和gradle7.3.3不适配

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.architecture.light.xhd"
        minSdk 21
        targetSdk 30
        versionCode 5
        versionName "1.0.5"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi'//, 'armeabi-v7a', 'arm64-v8a'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"
                ]
            }
        }
    }

    signingConfigs {
        config {
            storeFile file(StoreFile)
            storePassword StorePassword
            keyAlias KeyAlias
            keyPassword KeyPassword
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "IS_DEBUG", "true"
            minifyEnabled false
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "boolean", "IS_DEBUG", "false"
            minifyEnabled false
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def app = "XHD"
            def build_name = "${buildType.name}"
            def formattedDate = new Date().format('yyyyMMdd')
            def versionName = "${defaultConfig.versionName}"
            outputFileName = app + "_V" + versionName + "_" + formattedDate + "_" + build_name + ".apk"
        }
    }

    tasks.whenTaskAdded { task ->
        if (task.name.startsWith("assemble")) {
            task.doLast {
                android.applicationVariants.all { variant ->
                    File outputPath = new File("../build/outputs/apk/" + variant.versionName + "/" + System.getenv("BUILD_NUMBER"))
                    copy {
                        from variant.outputs[0].outputFile
                        into outputPath
                    }
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])

    implementation project(":architecture")
    kapt "androidx.room:room-compiler:2.4.3"

    implementation 'com.tencent.bugly:crashreport:4.0.4'
    implementation 'com.github.bingoogolapple:BGABanner-Android:3.0.1'
    implementation 'com.makeramen:roundedimageview:2.3.0'

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // AOP 插件库
    implementation 'org.aspectj:aspectjrt:1.9.6'


    debugImplementation 'com.guolindev.glance:glance:1.1.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}